{
 "Resources": {
  "MyEncryptedBucketKeyA262639F": {
   "Type": "AWS::KMS::Key",
   "Properties": {
    "KeyPolicy": {
     "Statement": [
      {
       "Action": "kms:*",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":root"
          ]
         ]
        }
       },
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Created by Part2CdkStack/MyEncryptedBucket"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Part2CdkStack/MyEncryptedBucket/Key/Resource"
   }
  },
  "MyEncryptedBucket9A8D2FE1": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "KMSMasterKeyID": {
         "Fn::GetAtt": [
          "MyEncryptedBucketKeyA262639F",
          "Arn"
         ]
        },
        "SSEAlgorithm": "aws:kms"
       }
      }
     ]
    },
    "BucketName": "part2asigncdklbhhgbgboo007",
    "LifecycleConfiguration": {
     "Rules": [
      {
       "Status": "Enabled",
       "Transitions": [
        {
         "StorageClass": "STANDARD_IA",
         "TransitionInDays": 30
        },
        {
         "StorageClass": "GLACIER",
         "TransitionInDays": 90
        }
       ]
      }
     ]
    },
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Part2CdkStack/MyEncryptedBucket/Resource"
   }
  },
  "mycdkvpc037DA4AF": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "Part2CdkStack/my-cdk-vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Part2CdkStack/my-cdk-vpc/Resource"
   }
  },
  "mycdkvpcpublicSubnet1Subnet2744EDFA": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "mycdkvpc037DA4AF"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "Part2CdkStack/my-cdk-vpc/publicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Part2CdkStack/my-cdk-vpc/publicSubnet1/Subnet"
   }
  },
  "mycdkvpcpublicSubnet1RouteTable17452791": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "mycdkvpc037DA4AF"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "Part2CdkStack/my-cdk-vpc/publicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Part2CdkStack/my-cdk-vpc/publicSubnet1/RouteTable"
   }
  },
  "mycdkvpcpublicSubnet1RouteTableAssociation2C76D2E0": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "mycdkvpcpublicSubnet1RouteTable17452791"
    },
    "SubnetId": {
     "Ref": "mycdkvpcpublicSubnet1Subnet2744EDFA"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Part2CdkStack/my-cdk-vpc/publicSubnet1/RouteTableAssociation"
   }
  },
  "mycdkvpcpublicSubnet1DefaultRouteB7CE1177": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "mycdkvpcpublicSubnet1RouteTable17452791"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "mycdkvpcIGW4220D5A9"
    }
   },
   "DependsOn": [
    "mycdkvpcVPCGW2444B783"
   ],
   "Metadata": {
    "aws:cdk:path": "Part2CdkStack/my-cdk-vpc/publicSubnet1/DefaultRoute"
   }
  },
  "mycdkvpcpublicSubnet2Subnet04ACD525": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "mycdkvpc037DA4AF"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.1.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "Part2CdkStack/my-cdk-vpc/publicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Part2CdkStack/my-cdk-vpc/publicSubnet2/Subnet"
   }
  },
  "mycdkvpcpublicSubnet2RouteTableA3477C62": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "mycdkvpc037DA4AF"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "Part2CdkStack/my-cdk-vpc/publicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Part2CdkStack/my-cdk-vpc/publicSubnet2/RouteTable"
   }
  },
  "mycdkvpcpublicSubnet2RouteTableAssociationD5E00FF0": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "mycdkvpcpublicSubnet2RouteTableA3477C62"
    },
    "SubnetId": {
     "Ref": "mycdkvpcpublicSubnet2Subnet04ACD525"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Part2CdkStack/my-cdk-vpc/publicSubnet2/RouteTableAssociation"
   }
  },
  "mycdkvpcpublicSubnet2DefaultRoute8DD53508": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "mycdkvpcpublicSubnet2RouteTableA3477C62"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "mycdkvpcIGW4220D5A9"
    }
   },
   "DependsOn": [
    "mycdkvpcVPCGW2444B783"
   ],
   "Metadata": {
    "aws:cdk:path": "Part2CdkStack/my-cdk-vpc/publicSubnet2/DefaultRoute"
   }
  },
  "mycdkvpcIGW4220D5A9": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "Part2CdkStack/my-cdk-vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Part2CdkStack/my-cdk-vpc/IGW"
   }
  },
  "mycdkvpcVPCGW2444B783": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "VpcId": {
     "Ref": "mycdkvpc037DA4AF"
    },
    "InternetGatewayId": {
     "Ref": "mycdkvpcIGW4220D5A9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Part2CdkStack/my-cdk-vpc/VPCGW"
   }
  },
  "webserversg676A088B": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Part2CdkStack/webserver-sg",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "allow SSH access from anywhere",
      "FromPort": 22,
      "IpProtocol": "tcp",
      "ToPort": 22
     },
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "allow HTTP traffic from anywhere",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     },
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "allow HTTPS traffic from anywhere",
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "VpcId": {
     "Ref": "mycdkvpc037DA4AF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Part2CdkStack/webserver-sg/Resource"
   }
  },
  "webserverroleDB0308B6": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonS3ReadOnlyAccess"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Part2CdkStack/webserver-role/Resource"
   }
  },
  "webserverroleDefaultPolicyB5C1A502": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MyEncryptedBucket9A8D2FE1",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "MyEncryptedBucket9A8D2FE1",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "kms:Decrypt",
        "kms:DescribeKey",
        "kms:Encrypt",
        "kms:GenerateDataKey*",
        "kms:ReEncrypt*"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "MyEncryptedBucketKeyA262639F",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "webserverroleDefaultPolicyB5C1A502",
    "Roles": [
     {
      "Ref": "webserverroleDB0308B6"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Part2CdkStack/webserver-role/DefaultPolicy/Resource"
   }
  },
  "ec2instanceInstanceProfile9BCE9015": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "webserverroleDB0308B6"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Part2CdkStack/ec2-instance/InstanceProfile"
   }
  },
  "ec2instance42082E81": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "IamInstanceProfile": {
     "Ref": "ec2instanceInstanceProfile9BCE9015"
    },
    "ImageId": {
     "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
    },
    "InstanceType": "t2.micro",
    "KeyName": "assignment",
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "webserversg676A088B",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "mycdkvpcpublicSubnet1Subnet2744EDFA"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "Part2CdkStack/ec2-instance"
     }
    ],
    "UserData": {
     "Fn::Base64": "#!/bin/bash\n#!/bin/bash\nyum update -y\nsudo su\n\namazon-linux-extras install -y nginx1\nsystemctl start nginx\nsystemctl enable nginx\nsudo hostnamectl set-hostname part2assign4\nsudo systemctl restart systemd-hostnamed\n\n# chmod 2775 /usr/share/nginx/html\n# find /usr/share/nginx/html -type d -exec chmod 2775 {} \\;\n# find /usr/share/nginx/html -type f -exec chmod 0664 {} \\;\n\n# echo \"<h1>It worked</h1>\" > /usr/share/nginx/html/index.html\n\n\n\n\n    \n\n"
    }
   },
   "DependsOn": [
    "webserverroleDefaultPolicyB5C1A502",
    "webserverroleDB0308B6"
   ],
   "Metadata": {
    "aws:cdk:path": "Part2CdkStack/ec2-instance/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1VQwU7EIBT8Fu8U3Rqj17WHzcZL05q9GkrfxrctsIGHm4bw79JSrZ7eMAwz8yj5c8kf7sTNFbIfihE7HloScmCJ+gjukYdXLwcgVp11RpENyvHwBtPMpREZyJKH01XOxKmuWO27EWXrO50fbqgxnuBddCNs/MbtnTMSBaHRv+IZHDWBTcqDILiJaY1ZT3tKfT8VaGItSG+RpoM1/roE/COO2pHQcrXMODIUiofG5EbLrE1qv6Rs6EdfW3PGEWJkDTjjbXarhRUKUsnF489FZXSP8z6RadMDv7j7r90L3z2lT784xMJ6TaiAN3l+Azy4d9GQAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "Part2CdkStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Parameters": {
  "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": {
   "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
   "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}